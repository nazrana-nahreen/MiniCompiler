
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN DIV EE ELSE FOR GE GT ID IF LBRACE LE LPAREN LT MINUS MUL NE NOT NUMBER OR PLUS PRINT RBRACE RPAREN SEMI WHILEprogram : statement_liststatement_list : statement_list statement\n| statementstatement : assignment\n| if_statement\n| for_loop\n| while_loop\n| print_statementassignment : ID ASSIGN expression SEMIprint_statement : PRINT expression SEMIif_statement : IF expression LBRACE statement_list RBRACE\n| IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACEfor_loop : FOR ID ASSIGN expression SEMI expression SEMI ID ASSIGN expression LBRACE statement_list RBRACEwhile_loop : WHILE expression LBRACE statement_list RBRACEexpression : expression PLUS expression\n| expression MINUS expression\n| expression MUL expression\n| expression DIV expression\n| expression LT expression\n| expression GT expression\n| expression LE expression\n| expression GE expression\n| expression EE expression\n| expression NE expression\n| expression AND expression\n| expression OR expressionexpression : NOT expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,59,60,61,62,65,66,67,69,70,72,73,74,],[9,9,-3,-4,-5,-6,-7,-8,20,21,20,20,-2,20,20,20,9,20,20,20,20,20,20,20,20,20,20,20,20,20,9,-10,-9,9,9,-11,20,-14,9,68,9,-12,20,9,9,-13,]),'IF':([0,2,3,4,5,6,7,8,14,25,41,42,43,44,59,60,62,65,67,69,72,73,74,],[10,10,-3,-4,-5,-6,-7,-8,-2,10,10,-10,-9,10,10,-11,-14,10,10,-12,10,10,-13,]),'FOR':([0,2,3,4,5,6,7,8,14,25,41,42,43,44,59,60,62,65,67,69,72,73,74,],[11,11,-3,-4,-5,-6,-7,-8,-2,11,11,-10,-9,11,11,-11,-14,11,11,-12,11,11,-13,]),'WHILE':([0,2,3,4,5,6,7,8,14,25,41,42,43,44,59,60,62,65,67,69,72,73,74,],[12,12,-3,-4,-5,-6,-7,-8,-2,12,12,-10,-9,12,12,-11,-14,12,12,-12,12,12,-13,]),'PRINT':([0,2,3,4,5,6,7,8,14,25,41,42,43,44,59,60,62,65,67,69,72,73,74,],[13,13,-3,-4,-5,-6,-7,-8,-2,13,13,-10,-9,13,13,-11,-14,13,13,-12,13,13,-13,]),'$end':([1,2,3,4,5,6,7,8,14,42,43,60,62,69,74,],[0,-1,-3,-4,-5,-6,-7,-8,-2,-10,-9,-11,-14,-12,-13,]),'RBRACE':([3,4,5,6,7,8,14,42,43,44,59,60,62,67,69,73,74,],[-3,-4,-5,-6,-7,-8,-2,-10,-9,60,62,-11,-14,69,-12,74,-13,]),'ASSIGN':([9,21,68,],[15,40,70,]),'NOT':([10,12,13,15,17,18,26,27,28,29,30,31,32,33,34,35,36,37,40,61,70,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LPAREN':([10,12,13,15,17,18,26,27,28,29,30,31,32,33,34,35,36,37,40,61,70,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NUMBER':([10,12,13,15,17,18,26,27,28,29,30,31,32,33,34,35,36,37,40,61,70,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LBRACE':([16,19,20,22,38,45,46,47,48,49,50,51,52,53,54,55,56,57,63,71,],[25,-29,-30,41,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,65,72,]),'PLUS':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[26,-29,-30,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-28,26,26,26,]),'MINUS':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[27,-29,-30,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-28,27,27,27,]),'MUL':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[28,-29,-30,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-28,28,28,28,]),'DIV':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[29,-29,-30,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-28,29,29,29,]),'LT':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[30,-29,-30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-28,30,30,30,]),'GT':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[31,-29,-30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-28,31,31,31,]),'LE':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[32,-29,-30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-28,32,32,32,]),'GE':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[33,-29,-30,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-28,33,33,33,]),'EE':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[34,-29,-30,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-28,34,34,34,]),'NE':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[35,-29,-30,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-28,35,35,35,]),'AND':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[36,-29,-30,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-28,36,36,36,]),'OR':([16,19,20,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,71,],[37,-29,-30,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-28,37,37,37,]),'SEMI':([19,20,23,24,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,],[-29,-30,42,43,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,61,66,]),'RPAREN':([19,20,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,],[-29,-30,-27,57,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,]),'ELSE':([60,],[63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,25,41,65,72,],[2,44,59,67,73,]),'statement':([0,2,25,41,44,59,65,67,72,73,],[3,14,3,3,14,14,3,14,3,14,]),'assignment':([0,2,25,41,44,59,65,67,72,73,],[4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,2,25,41,44,59,65,67,72,73,],[5,5,5,5,5,5,5,5,5,5,]),'for_loop':([0,2,25,41,44,59,65,67,72,73,],[6,6,6,6,6,6,6,6,6,6,]),'while_loop':([0,2,25,41,44,59,65,67,72,73,],[7,7,7,7,7,7,7,7,7,7,]),'print_statement':([0,2,25,41,44,59,65,67,72,73,],[8,8,8,8,8,8,8,8,8,8,]),'expression':([10,12,13,15,17,18,26,27,28,29,30,31,32,33,34,35,36,37,40,61,70,],[16,22,23,24,38,39,45,46,47,48,49,50,51,52,53,54,55,56,58,64,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',9),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement -> assignment','statement',1,'p_statement','parser.py',21),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',22),
  ('statement -> for_loop','statement',1,'p_statement','parser.py',23),
  ('statement -> while_loop','statement',1,'p_statement','parser.py',24),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',25),
  ('assignment -> ID ASSIGN expression SEMI','assignment',4,'p_assignment','parser.py',29),
  ('print_statement -> PRINT expression SEMI','print_statement',3,'p_print_statement','parser.py',33),
  ('if_statement -> IF expression LBRACE statement_list RBRACE','if_statement',5,'p_if_statement','parser.py',37),
  ('if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',9,'p_if_statement','parser.py',38),
  ('for_loop -> FOR ID ASSIGN expression SEMI expression SEMI ID ASSIGN expression LBRACE statement_list RBRACE','for_loop',13,'p_for_loop','parser.py',45),
  ('while_loop -> WHILE expression LBRACE statement_list RBRACE','while_loop',5,'p_while_loop','parser.py',56),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',60),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',61),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','parser.py',62),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',63),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',64),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',65),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',66),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',67),
  ('expression -> expression EE expression','expression',3,'p_expression_binop','parser.py',68),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',69),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',70),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',71),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',75),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',79),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',83),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',87),
]
